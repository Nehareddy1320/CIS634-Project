SOFTWARE DESIGN SPECIFICATION
Project Name: Food Wastage Management

 

Group Members:
1.	Neha Reddy Baddam : 2828070
2.	Nikitha Thangellapally : 2844791
3.	Manasa Moduga : 2845854
4.	Seshasai Vamsikrishna Murthy Nidadavolu :2845851



1.0 Introduction
This document describes all data, architectural, interface and component-level design for the software.
1.1 Goals and objectives
	Recover food waste by connecting potential food donors to hunger relief organizations like food banks and pantries,NGO's.
	Recycle food waste to feed animals or to create compost, bio-energy, and natural fertilizers.
1.2 Statement of scope
The project will accept as input, user details, including the name of the user and their location. With the users location, the application will notify the administrators of the availability of the potential food waste, and as such, the administrators are able to take necessary actions, like dispatch food waste trucks to such locations, taking into account the needed capacity.
1.3 Software context
With the software in place, businesses are able to:
save food from going into the garbage.
	Save costs on labor through more efficient handling, preparation, and storage of food that will be used.
	As a result of the analysis of the data on food waste collected; save costs when purchasing only as much food as needed, and avoiding additional costs of disposal.
	Reduced methane emissions from landfills and a lower carbon footprint.
	Better their management of energy and resources, preventing pollution involved in the growing, manufacturing, transporting, and selling of food.
	Benefit the community by providing donated, untouched, and safe food that would otherwise be thrown out.
1.4 Major constraints
Businesses that have access to cloud storage, may rip its benefits, such as:
	Safe data backups; no need to worry about hard drive failures.
	Remote updates and data sync.
	File encryption.
	Lifetime access.
With cloud storage in place, the software will have to be integrated with external data in the cloud services. This may increase the time taken in the design, implementation and testing phases.

2.0 Data design
with User input , which comes the need to kep user information organized, and self-contained.
2.1 Data structures
Data flow from the user to the application, needs be in a unified format. For this reason the data will mostly be structured as xml, as this format can be converted to and from many representations, both in the user interface and stored in the database.
2.2 Database description
With the need to manage user information, there is need to create such a database, to ensure user information is organized and is only accessible to authorized personnel, or by the sole user on request. Such a database would hold information such as:
	Users names, and contact details.
	The location of such users, and where exactly the potential food waste was spotted by the user.
	The application settings applied by the users; to keep track of what the user wants done every time the application is used.
 
3.0 Architectural and component-level design
3.1 Architecture diagrams
    user Login --------> Client Authentication --------> User reports potential Food waste
        |                         
        |
        |
  Administrator --------> Check f0r requests for --------> Dispatch of food waste 
  Authentication           food waste collection             collection Trucks
3.2 External Interface Description
To support cloud storage, the application will implement Application Programming Interfaces available for top cloud storage providers.

4.0 Restrictions, limitations, and constraints
There are many Operating Systems available, each following different standards of application development. Catering for all of the Operating Systems would be not be possible; this is because some Operating Systems do not even support development using the target programming language.

